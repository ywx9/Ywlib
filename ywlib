#pragma once /* clang-format off */ /* Python code start
import os, sys, subprocess
here = os.path.dirname(os.path.abspath(__file__))
if len(sys.argv) < 2:
  print("Usage: python .compile [<cpp_file> [--run]]")
  sys.exit(1)
cpp_file = sys.argv[1]
if not os.path.exists(cpp_file):
  print(f"{cpp_file} not found:")
  sys.exit(1)
if not os.path.isfile(cpp_file):
  print(f"{cpp_file} is not a file:")
  sys.exit(1)
exe_file = cpp_file.replace(".cpp", ".exe")
obj_file = cpp_file.replace(".cpp", ".obj")
if os.path.exists(exe_file): os.remove(exe_file)
if os.path.exists(obj_file): os.remove(obj_file)
args = [fR"{here}\ywstd\bin\cl", cpp_file, f"/Fe{exe_file}", f"/Fo{obj_file}", "/Dywstd_import", fR"/I{here}\ywstd", fR"/I{here}\ywstd\msvc-sub", ]
args+= ["/std:c++latest", "/EHsc", "/nologo", "/W4", "/O2", "/Qpar", "/utf-8", ]
args+= [fR"/referenceywstd={here}\ywstd\ywstd.ifc", "/link", fR"{here}\ywstd\ywstd.obj", fR"/LIBPATH:{here}\ywstd\lib", ]
subprocess.run(args)
if os.path.exists(obj_file): os.remove(obj_file)
if os.path.exists(exe_file):
  print(f"{exe_file} compiled successfully.")
  if "--run" in sys.argv:
    print(f"Running {exe_file}...")
    rc = subprocess.run([exe_file]).returncode
    print(f"{exe_file} returned {rc}.")
  sys.exit(0)
else:
  print(f"Failed to compile {cpp_file}.")
  sys.exit(1)
# Python code end */

#pragma comment(lib, "libcpmt")
#include <ywstd>
